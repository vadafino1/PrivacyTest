version: '3.8'

services:
  web:
    build: .
    ports:
      - "3000:3000"
    environment:
      # Database credentials (VULNERABILITY: Exposed secrets in environment)
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=SuperSecretPassword123!
      - DB_NAME=privacy_test
      
      # API Keys (VULNERABILITY: Hardcoded API keys)
      - GOOGLE_API_KEY=AIzaSyDxyz123456789abcdefghijklmnopqrstuvw
      - STRIPE_SECRET_KEY=sk_live_fake_51HCgMAD5L5DhKR1M9I4vGo3wZzjH2jIqpKnJgCKYZo6XRMqGYhpvLZGrWe8MZJXf2nYfQRJkjH8hNdv
      - FACEBOOK_APP_SECRET=a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6
      
      # Twilio credentials (VULNERABILITY: Exposed Twilio credentials)
      - TWILIO_ACCOUNT_SID=TWL6ffc125ba936a44d3b6e80d1b5c3e1234
      - TWILIO_AUTH_TOKEN=your_auth_token_here_12345678
      
      # AWS credentials (VULNERABILITY: Exposed AWS credentials)
      - AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
      - AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - AWS_REGION=us-east-1
      
      # JWT and encryption (VULNERABILITY: Exposed signing keys)
      - JWT_SECRET=super-secret-jwt-signing-key-2024
      - ENCRYPTION_KEY=MyEncryptionKey123456789!@#$%^&*()
      
      # Admin credentials (VULNERABILITY: Hardcoded admin access)
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=AdminPassword123!
      - ADMIN_TOKEN=admin-token-12345-67890-abcdef
      
      # Email credentials (VULNERABILITY: SMTP credentials)
      - SMTP_HOST=smtp.gmail.com
      - SMTP_USER=admin@example.com
      - SMTP_PASSWORD=EmailPassword123!
      
      # Redis password (VULNERABILITY: Database password)
      - REDIS_PASSWORD=RedisPassword123!
      
      # Monitoring and logging (VULNERABILITY: Service tokens)
      - SENTRY_DSN=https://abc123def456@o123456.ingest.sentry.io/123456
      - DATADOG_API_KEY=ab12cd34ef56gh78ij90kl12mn34op56
      - NEWRELIC_LICENSE_KEY=eu01xxabcdefghijklmnopqrstuvwxyz1234NRAL
      
      # OAuth secrets (VULNERABILITY: OAuth client secrets)
      - GOOGLE_CLIENT_SECRET=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45
      - GITHUB_CLIENT_SECRET=ghcs_1234567890abcdefghijklmnopqrstuvwxyz12
      
      # Webhook URLs (VULNERABILITY: Exposed webhook URLs)
      - SLACK_WEBHOOK=https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX
      - DISCORD_BOT_TOKEN=ODc2NTQzMjEwOTg3NjU0MzIx.YR7G_w.abcdefghijklmnopqrstuvwxyz123456
      
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock  # VULNERABILITY: Docker socket exposure

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"  # VULNERABILITY: Database port exposed
    environment:
      - MYSQL_ROOT_PASSWORD=SuperSecretPassword123!
      - MYSQL_DATABASE=privacy_test
      - MYSQL_USER=appuser
      - MYSQL_PASSWORD=AppUserPassword123!
    volumes:
      - db_data:/var/lib/mysql
      - ./backup.sql:/docker-entrypoint-initdb.d/backup.sql
    command: --general-log=1 --general-log-file=/var/lib/mysql/general.log  # VULNERABILITY: Query logging enabled

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"  # VULNERABILITY: Redis port exposed
    command: redis-server --requirepass RedisPassword123! --appendonly yes
    volumes:
      - redis_data:/data

  elasticsearch:
    image: elasticsearch:7.17.0
    ports:
      - "9200:9200"  # VULNERABILITY: Elasticsearch exposed
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false  # VULNERABILITY: Security disabled
    volumes:
      - es_data:/usr/share/elasticsearch/data

  mongodb:
    image: mongo:5.0
    ports:
      - "27017:27017"  # VULNERABILITY: MongoDB exposed without auth
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=MongoPassword123!
    volumes:
      - mongo_data:/data/db

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/private.key:/etc/ssl/private/server.key  # VULNERABILITY: Private key in volume
      - ./ssl/certificate.crt:/etc/ssl/certs/server.crt
    depends_on:
      - web

volumes:
  db_data:
  redis_data:
  es_data:
  mongo_data:

# VULNERABILITY: Exposed secrets in comments
# Production secrets (DO NOT USE IN REAL DEPLOYMENTS):
# Database: root:SuperSecretPassword123!@localhost:3306
# Redis: redis://default:RedisPassword123!@localhost:6379
# Admin: admin/AdminPassword123!
# API Keys: See environment variables above